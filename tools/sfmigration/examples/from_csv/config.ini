[CSV]
#path to the csv file to use
csv_file = pymox.csv
#if the csv file doesn't start with a columns header, define column names here (comma-separated)
#fieldnames = issue_id,subject,description,tracker,blablabla
#define how to map columns to the redmine attributes
#source_id: the original issue id
source_id = ID
#subject: title of the issue
subject = Summary
#description: the description of the issue
description = 
#tracker_{id,name}: tracker info
#tracker_id =
tracker_name = Type
#status_{id,name}: status info
#status_id =
status_name = Status
#priority_{id,name}: priority info
#priority_id =
priority_name = Priority
#done_ratio: the issue done ratio
#done_ratio =
#story_points: the issue story points
#story_points =
#fixed_version_id, version_name: the milestone info
#fixed_version_id =
version_name = Milestone
#assigned_to_{id,login}: the assignee info
#assigned_to_id =
assigned_to_login = Owner

[DEST_REDMINE]
username = admin
password = userpass
#id or identifier of the issue's project
#if don't know the id, comment this and give the project's name in name field
#id = 3
#name of the project
#if id of the project is given, this field is optional
name = PyMox Factory
#software factory domain for authentication
sf_domain = sftests.com
#redmine url
url = https://sftests.com/redmine/

[MAPPINGS]
#list user mappings in the form: source_redmine login:dest_redmine login
#if a user isn't mapped, we will look for the login in dest_redmine; if the user doesn't exist there, the issue will remain unassigned.
#admin = userA
#user2 = userB
#map 'open' issue status to redmine's 'In Progress'
Open = In Progress

[SKIP]
#comma-separated list of versions not to migrate
version_id=
#comma-separated list of issues not to migrate
issue_id=
