#!/bin/bash
#
# Copyright (C) 2014 eNovance SAS <licensing@enovance.com>
#
# Author: Frederic Lepied <frederic.lepied@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

set -x

dir="$1"
src=$dir
dist="$2"

#note(fbo): edeploy version ?
version="$3"

CODENAME_MAJOR=7
DIST=$dist

ROLE=base

ORIG=$(cd $(dirname $0); pwd)

. ${ORIG}/third_party_tools
. ${ORIG}/functions


install_edeploy_bin() {
    target=$1
    mkdir -p "$target/var/lib/edeploy/${version}"
    cp -p ${SDIR}/build/edeploy ${target}/usr/sbin/
    cp ${SDIR}/build/base.exclude "$target/var/lib/edeploy/${version}/exclude"
}

init_redhat_chroot() {
    local target="$1"
    local release_rpm_url="$2"
    local dist="$3"
    local rpm_repository="$REPOSITORY"

    if [ ! -f "${target}/etc/redhat-release" ]; then
        rpm --initdb --root="$target"
        rpm -ivh --root "$target" $release_rpm_url
    fi

    if [ ! -d ${target}/etc/yum.repos.d ]; then
        mkdir -p ${target}/etc/yum.repos.d
        curl ${REPOSITORY}/media.repo > ${target}/etc/yum.repos.d/rhel-source.repo
    fi

    sed -i 's/$releasever/7/g' ${target}/etc/yum.repos.d/*

    cp -f /etc/resolv.conf "$target/etc/"

    rebuild_db_with_local $target
    rpm --root="$target" --import $(ls $target/etc/pki/rpm-gpg/RPM-GPG-KEY-* | fgrep -v Debug)
    # We cannot use install_packages since the basesystem isn't yet setup
    yum --disableplugin=* --installroot $target install -y basesystem yum

    if [ -f  "$target"/root/.rpmdb/Packages ]; then
        mv -f "$target"/root/.rpmdb/*  "$target"/root/.rpmdb/.??* "$target"/var/lib/rpm/
        rmdir "$target"/root/.rpmdb
    fi

    # In some weird cases, the rpmdb is empty. Let's try to populate it again
    nb_packages=$(do_chroot $target sh -c "rpm -qa | wc -l")
    if [ "$nb_packages" = "0" ]; then
           install_packages "$target" basesystem yum
    fi

    install_packages $target "shadow-utils"
    if [ -f ${target}/usr/sbin/useradd ]; then
        fake_shadow_utils
    fi


    rebuild_db $target
}

bootstrap() {
    local target=$1
    rm -rf $target

    mount_fs

    # need to be called after mount to get info from the iso
    echo $supported_centos_dists
    echo $CODENAME_MAJOR
    local repository=$(add_main_repository $dist)

    check_binary yum
    check_binary rpm

    init_redhat_chroot "$target" "$repository" "$dist"
    cp ${target}/etc/skel/.bashrc ${target}/root
    cp ${target}/etc/skel/.bash_profile ${target}/root
    cp -p ${SDIR}/build/check-ug.py ${target}/usr/sbin/
    # Control the ids created by useradd and groupadd by wrapping
    # the commands with mngids.py
    cp -p ${SDIR}/build/mngids.py ${target}/usr/sbin/
    cp ${SDIR}/build/C7.0-ids.tables ${dir}/etc/ids.tables

    clean_mount_points
}

configure_cloudinit() {
    mkdir -p ${dir}/etc/cloud/cloud.cfg.d
    rm -f ${dir}/etc/cloud/cloud.cfg

    add_epel_repository $DIST
    install_packages $dir "cloud-init cloud-utils cloud-utils-growpart"
    remove_epel_repository $DIST

    cat > ${dir}/etc/cloud/cloud.cfg <<EOF
user: root
disable_root: 0
preserve_hostname: False

cloud_init_modules:
 - bootcmd
 - growpart
 - resizefs
 - set_hostname
 - update_hostname
 - update_etc_hosts
 - ca-certs
 - rsyslog
 - ssh
 - users-groups
 - write-files

cloud_config_modules:
 - migrator
 - mounts
 - ssh-import-id
 - locale
 - set-passwords
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu

cloud_final_modules:
 - rightscale_userdata
 - scripts-per-once
 - scripts-per-boot
 - scripts-per-instance
 - scripts-user
 - ssh-authkey-fingerprints
 - keys-to-console
 - phone-home
 - final-message
EOF

    cat > ${dir}/etc/cloud/cloud.cfg.d/90_sources.cfg << EOF
datasource_list: [ NoCloud, Ec2, OpenStack, ConfigDrive, None ]
EOF

    others_cloud_config_modules=$(mktemp)
    cat > $others_cloud_config_modules << EOF
 - yum-add-repo
 - package-update-upgrade-install
EOF
    cat >> ${dir}/etc/cloud/cloud.cfg <<EOF

system_info:
  distro: rhel
  paths:
    cloud_dir: /var/lib/cloud
    templates_dir: /etc/cloud/templates
  ssh_svcname: sshd
EOF
    sed -i "/set-passwords/r  $others_cloud_config_modules" ${dir}/etc/cloud/cloud.cfg
}

install_base_packages() {
    target=$1
    local repository=$(add_main_repository $dist)
    local packages="coreutils dhclient e2fsprogs man-db grub2 grubby hdparm initscripts iproute kernel net-tools passwd perl redhat-lsb-core crontabs openssh-clients bind-utils kexec-tools selinux-policy-targeted setroubleshoot-server acpid bash curl dmidecode kbd lvm2 openssh-server parted pciutils rsync rsyslog sudo wget ntpdate logrotate ethtool hdparm iptables tcpdump ipmitool lldpad"

    install_packages $target "$packages"

    echo  'LANG=en_US.UTF-8' > $target/etc/locale.conf
    # don't rename net ifaces
    ln -s /dev/null $dir/etc/udev/rules.d/80-net-name-slot.rules
    touch ${target}/.autorelabel
    sed -i 's/SELINUX=.*/SELINUX=permissive/' ${target}/etc/selinux/config
}


trap cleanup 0
bootstrap $dir
common_setup
install_base_packages $dir
install_edeploy_bin $dir
configure_cloudinit



clean_tmp_dir $dir
