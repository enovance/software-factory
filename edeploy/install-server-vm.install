#!/bin/bash
#
# Copyright (C) 2014 eNovance SAS <licensing@enovance.com>
#
# Author: Frederic Lepied <frederic.lepied@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

src="$1"
dir="$2"
version="$3"
ROLE=install-server-vm

ORIG=$(cd $(dirname $0); pwd)

. ${ORIG}/third_party_tools
. ${ORIG}/functions

update_repositories ${dir}

retry $EDEPLOY_ROLES_PATH/puppet-master.install $dir $dir $version

# Temporary workaround for http://softwarefactory.enovance.com/redmine/issues/881
cat >${dir}/etc/puppet/auth.conf<<EOF
path ~ .*
auth any
allow *
EOF


case "$(package_tool)" in
    "yum")
        add_epel_repository $DIST
        install_packages ${dir} vim-enhanced openldap-devel python-devel postfix gcc libffi-devel bc monit ansible sshpass
        install_bup ${dir}
        remove_epel_repository $DIST
        ;;
    *)
        fatal_error "Unsupported package_tool: $(package_tool)"
        ;;
esac

# serverspec and stuff
RSPEC_CORE_VERSION=2.99.0
RSPEC_EXPECTATIONS_VERSION=${RSPEC_CORE_VERSION}
RSPEC_ITS_VERSION=1.0.0
SPECINFRA_VERSION=1.27.0
SERVERSPEC_VERSION=1.16.0

# The install-server image provided lot of tools not used right now in SF
# and in order to reduce image footprint we clean some useless components
do_chroot ${dir} rm -Rf /opt/*

HOME=/root do_chroot ${dir} gem uninstall -aIx rspec rspec-core rspec-expectations rspec-extra-formatters rspec-mocks serverspec specinfra
HOME=/root retry do_chroot ${dir} gem install rspec-core -v ${RSPEC_CORE_VERSION}
HOME=/root retry do_chroot ${dir} gem install rspec-expectations -v ${RSPEC_EXPECTATIONS_VERSION}
HOME=/root retry do_chroot ${dir} gem install rspec-its -v ${RSPEC_ITS_VERSION}
HOME=/root retry do_chroot ${dir} gem install specinfra -v ${SPECINFRA_VERSION}
HOME=/root retry do_chroot ${dir} gem install serverspec -v ${SERVERSPEC_VERSION}

# Install the most recent version of PIP at early stage
retry do_chroot ${dir} pip install -U pip python-swiftclient

# Install secure SSL platform for python 2.7.*
retry do_chroot ${dir} pip install pyopenssl
retry do_chroot ${dir} pip install ndg-httpsclient
retry do_chroot ${dir} pip install pyasn1

# Install puppet files for SF
do_chroot ${dir} mkdir -p /etc/puppet/environments/sf
do_chroot ${dir} mkdir -p /etc/puppet/hiera/sf
cp -Rv ../puppet/manifests ${dir}/etc/puppet/environments/sf
cp -Rv ../puppet/modules ${dir}/etc/puppet/environments/sf
cp -Rv ../puppet/hiera/* ${dir}/etc/puppet/hiera/sf
cp -Rv ../puppet/hiera.yaml ${dir}/etc/puppet/

# Install the bootstrap scripts
mkdir ${dir}/root/puppet-bootstrapper
cp -Rv ../tests ${dir}/root/puppet-bootstrapper/
cp -Rv ../tools ${dir}/root/puppet-bootstrapper/
cp -Rv ../serverspec ${dir}/root/puppet-bootstrapper/
cp -Rv ../bootstraps/*.sh ${dir}/root/puppet-bootstrapper/
cp -Rv ../bootstraps/sfcreds.yaml ${dir}/root/puppet-bootstrapper/

# install pysflib. pysflib has been checkouted before on the build node in /tmp
mkdir -p ${dir}/root/puppet-bootstrapper/tools/pysflib
cp -Rv ${PYSFLIB_CLONED_PATH}/* ${dir}/root/puppet-bootstrapper/tools/pysflib/
retry do_chroot ${dir} bash -c "cd /root/puppet-bootstrapper/tools/pysflib; pip install -r requirements.txt"
do_chroot ${dir} bash -c "cd /root/puppet-bootstrapper/tools/pysflib; python setup.py install"

# install sfmanager. managesf has been checkouted before on the build node in /tmp
mkdir -p ${dir}/root/puppet-bootstrapper/tools/managesf
cp -Rv ${MANAGESF_CLONED_PATH}/* ${dir}/root/puppet-bootstrapper/tools/managesf/
# override pysflib version from requirements
do_chroot ${dir} sed -i '/pysflib/d' /root/puppet-bootstrapper/tools/managesf/requirements.txt
retry do_chroot ${dir} bash -c "cd /root/puppet-bootstrapper/tools/managesf; pip install -r requirements.txt"
do_chroot ${dir} bash -c "cd /root/puppet-bootstrapper/tools/managesf; python setup.py install"

# install-server-vm embed Jenkins (We dont want to have it here ...)
# The role Jenkins does not deactivate the jenkins service at startup
# https://github.com/redhat-cip/edeploy-roles/issues/80
do_chroot ${dir} bash -c "for x in {0..6}; do ls /etc/rc\${x}.d/*jenkins | xargs rm -f ; done"

# install requirements for functional tests
retry do_chroot ${dir} bash -c "cd /root/puppet-bootstrapper/tests; pip install -r requirements.txt"

# Cleanup
clear_packages_cache ${dir}
# somehow yum left some packages behind...
rm -f ${dir}/var/cache/yum/*/packages/*.rpm
rm -f ${dir}/var/cache/yum/*/*.sqlite
# When roles are built by jenkins user (the case in our gate)
# some hidden directories are stored in /var/lib/jenkins (Jenkins home)
rm -Rf ${dir}/var/lib/jenkins/.[!.]*

# Disable root passwd
do_chroot ${dir} passwd -l root

disable_selinux

# install third party puppet modules
retry do_chroot $dir puppet module install puppetlabs-ntp --environment=sf

put_git_mark $dir
