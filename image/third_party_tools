# -*- shell-script -*-
# Note: Change to _VERSION likely needs to be reported to the mirror2swift configuration

set +x

USE_SWIFT_CACHE=${USE_SWIFT_CACHE:-yes}
SWIFT_CACHE="http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror"

# yum
RDO_REPO="https://repos.fedorapeople.org/repos/openstack/openstack-mitaka/rdo-release-mitaka-5.noarch.rpm"
URL_LIST="$URL_LIST $RDO_REPO"

RDO_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_rdo.txt)"

EPEL_REPO="epel-release"
EPEL_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_epel.txt)"

BUILD_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_build_requirements.txt)"
CENTOS_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_centos.txt)"

PASSENGER_REPO="https://oss-binaries.phusionpassenger.com/yum/definitions/el-passenger.repo"
PASSENGER_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_passenger.txt)"

RPM_PKGS="${PASSENGER_PKGS} ${EPEL_PKGS} ${RDO_PKGS} ${CENTOS_PKGS} ${BUILD_PKGS} jenkins grafana"
URL_LIST="$URL_LIST $PASSENGER_REPO $RDO_REPO"

# pip
PIP_PKGS="$(grep '^[a-zA-Z\-]' ${ORIG}/packages/pip_pkgs.txt)"
export PIP_USE_MIRRORS=True


# Serverspec gem versions
SERVERSPEC_VERSION=2.25.0

GIT_VERSION=2.8.4

if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    BASE_EXTRA_VARS="git_url: \"${SWIFT_CACHE}/git/v${GIT_VERSION}.tar.gz\", git_version: \"${GIT_VERSION}\""
fi

# Storyboard
STORYBOARD_COMMIT="0022dbd4377b1de8767d6ae7de1c26c09aa9966c"
STORYBOARD_CLIENT_COMMIT="cfdfaf866ca5da63ac734552772e1fe2f87c6543"
STORYBOARD_WEBCLIENT_COMMIT="28b4809"

if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MANAGESF_EXTRA_VARS="storyboardclient_url: \"${SWIFT_CACHE}/python-storyboardclient.git\""
    MANAGESF_EXTRA_VARS+=", storyboardclient_commit: \"${STORYBOARD_CLIENT_COMMIT}\""

    STORYBOARD_EXTRA_VARS+="storyboard_url: \"${SWIFT_CACHE}/storyboard.git\""
    STORYBOARD_EXTRA_VARS+=", storyboard_commit: \"${STORYBOARD_COMMIT}\""
    STORYBOARD_EXTRA_VARS+=", storyboardclient_url: \"${SWIFT_CACHE}/python-storyboardclient.git\""
    STORYBOARD_EXTRA_VARS+=", storyboardclient_commit: \"${STORYBOARD_CLIENT_COMMIT}\""

    STORYBOARD_WEBCLIENT_EXTRA_VARS="storyboard_webclient_url: \"${SWIFT_CACHE}/storyboard-webclient/storyboard-webclient-${STORYBOARD_WEBCLIENT_COMMIT}.tar.gz\""
    STORYBOARD_WEBCLIENT_EXTRA_VARS+=", storyboard_webclient_commit: \"${STORYBOARD_WEBCLIENT_COMMIT}\""
fi


# Job logs Gearman processors
LOG_GEARMAN_CLIENT_VERSION="d7d9d50ee2706608386c802246591a6c80a58a7f"
LOG_GEARMAN_CLIENT_URL="https://raw.githubusercontent.com/openstack-infra/puppet-log_processor/${LOG_GEARMAN_CLIENT_VERSION}/files/log-gearman-client.py"
LOG_GEARMAN_WORKER_VERSION="84c7e723128fab9da321ae1b0977e7d13923b36b"
LOG_GEARMAN_WORKER_URL="https://raw.githubusercontent.com/openstack-infra/puppet-log_processor/${LOG_GEARMAN_WORKER_VERSION}/files/log-gearman-worker.py"

URL_LIST="$URL_LIST $LOG_GEARMAN_CLIENT_URL $LOG_GEARMAN_WORKER_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    LOG_GEARMAN_CLIENT_URL="${SWIFT_CACHE}/log_gearman/log-gearman-client.py"
    LOG_GEARMAN_WORKER_URL="${SWIFT_CACHE}/log_gearman/log-gearman-worker.py"
fi

# Elasticsearch
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ELASTICSEARCH_EXTRA_VARS="elasticsearch_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/rpms\""
    ELASTICSEARCH_EXTRA_VARS+=", elasticsearch_repo_name: \"elastic\""
    ELASTICSEARCH_EXTRA_VARS+=", elasticsearch_repo_desc: \"Mirrored elastic repo\""
    ELASTICSEARCH_EXTRA_VARS+=", elasticsearch_repo_gpgcheck: \"0\""
fi

# Logstash
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    LOGSTASH_EXTRA_VARS="logstash_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/rpms\""
    LOGSTASH_EXTRA_VARS+=", logstash_repo_name: \"elastic\""
    LOGSTASH_EXTRA_VARS+=", logstash_repo_desc: \"Mirrored elastic repo\""
    LOGSTASH_EXTRA_VARS+=", logstash_repo_gpgcheck: \"0\""
fi

# Kibana
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    KIBANA_EXTRA_VARS="kibana_repo_url: \"http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/rpms\""
    KIBANA_EXTRA_VARS+=", kibana_repo_name: \"elastic\""
    KIBANA_EXTRA_VARS+=", kibana_repo_desc: \"Mirrored elastic repo\""
    KIBANA_EXTRA_VARS+=", kibana_repo_gpgcheck: \"0\""
fi

# redmine
REDMINE_VERSION=2.6.9
REDMINE_RHEL_URL="http://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"
REDMINE_BACKLOG_URL="https://github.com/backlogs/redmine_backlogs.git"
REDMINE_BACKLOG_VERSION="v1.0.6"
REDMINE_HTTP_PLUGIN_URL="https://github.com/kevinfoote/redmine_http_auth.git"
REDMINE_HTTP_PLUGIN_VERSION="259fb633ac27737d8b0f6a02230e7fa8f619b852"

URL_LIST="$URL_LIST $REDMINE_RHEL_URL"
GIT_REPO_LIST="$GIT_REPO_LIST $REDMINE_BACKLOG_URL $REDMINE_HTTP_PLUGIN_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    REDMINE_RHEL_URL="${SWIFT_CACHE}/redmine/redmine-${REDMINE_VERSION}.tar.gz"
    REDMINE_BACKLOG_URL="${SWIFT_CACHE}/redmine_backlogs.git"
    REDMINE_HTTP_PLUGIN_URL="${SWIFT_CACHE}/redmine_http_auth.git"
fi


# murmur
MURMUR_VERSION=1.2.13
MURMUR_URL="https://github.com/mumble-voip/mumble/releases/download/${MURMUR_VERSION}/murmur-static_x86-${MURMUR_VERSION}.tar.bz2"

URL_LIST="$URL_LIST $MURMUR_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MURMUR_URL="${SWIFT_CACHE}/murmur/murmur-static_x86-${MURMUR_VERSION}.tar.bz2"
fi


# gerrit
GERRIT_VERSION=2.11.9
GERRIT_URL="https://gerrit-releases.storage.googleapis.com/gerrit-${GERRIT_VERSION}.war"
MYSQLJAVA_VERSION=5.1.21
MYSQLJAVA_URL="http://repo2.maven.org/maven2/mysql/mysql-connector-java/${MYSQLJAVA_VERSION}/mysql-connector-java-${MYSQLJAVA_VERSION}.jar"
BCPROV_VERSION="151"
BCPROVJDK_VERSION="jdk15on"
BCPROVJAVA_URL="http://downloads.bouncycastle.org/java/bcprov-${BCPROVJDK_VERSION}-${BCPROV_VERSION}.jar"
BCPKIX_VERSION=$BCPROV_VERSION
BCPKIXJDK_VERSION=$BCPROVJDK_VERSION
BCPKIXJAVA_URL="http://downloads.bouncycastle.org/java/bcpkix-${BCPKIXJDK_VERSION}-${BCPKIX_VERSION}.jar"

URL_LIST="$URL_LIST $GERRIT_URL $MYSQLJAVA_URL $BCPROVJAVA_URL $BCPKIXJAVA_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    GERRIT_URL="${SWIFT_CACHE}/gerrit/gerrit-${GERRIT_VERSION}.war"
    MYSQLJAVA_URL="${SWIFT_CACHE}/gerrit/mysql-connector-java-${MYSQLJAVA_VERSION}.jar"
    BCPROVJAVA_URL="${SWIFT_CACHE}/gerrit/bcprov-${BCPROVJDK_VERSION}-${BCPROV_VERSION}.jar"
    BCPKIXJAVA_URL="${SWIFT_CACHE}/gerrit/bcpkix-${BCPKIXJDK_VERSION}-${BCPKIX_VERSION}.jar"
fi

# zuul_swift_upload
ZUUL_SWIFT_UPLOAD_URL="https://raw.githubusercontent.com/openstack-infra/project-config/master/jenkins/scripts/zuul_swift_upload.py"
URL_LIST="${URL_LIST} ${ZUUL_SWIFT_UPLOAD_URL}"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ZUUL_SWIFT_UPLOAD_URL="${SWIFT_CACHE}/zuul/zuul_swift_upload.py"
fi

# jenkins
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    JENKINS_EXTRA_VARS="jenkins_cache_url: \"${SWIFT_CACHE}/jenkins_plugins\""
fi

# etherpad
ETHERPAD_LITE_VERSION=1.6.1
ETHERPAD_LITE_URL="https://codeload.github.com/ether/etherpad-lite/tar.gz/${ETHERPAD_LITE_VERSION}"

URL_LIST="$URL_LIST $ETHERPAD_LITE_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ETHERPAD_EXTRA_VARS="etherpad_source_url: \"${SWIFT_CACHE}/etherpad/${ETHERPAD_LITE_VERSION}\""
    ETHERPAD_EXTRA_VARS+=", etherpad_version: \"${ETHERPAD_LITE_VERSION}\""
fi

# Zuul / Nodepool
NODEPOOL_URL="https://github.com/openstack-infra/nodepool"
NODEPOOL_VERSION=1fd2a14ab79d256419083e2b2d9c463af36e039a # 2016-05-18
ZUUL_VERSION=a8b90b38094587bbd82ffa5e4028aef1dfd02987     # 2016-08-24

# gerritbot
GERRITBOT_URL="https://github.com/openstack-infra/gerritbot"
GERRITBOT_VERSION=d48b1bc41717291e43425ff437d6214b6934f60f

GIT_REPO_LIST="$GIT_REPO_LIST $NODEPOOL_URL $GERRITBOT_URL $REPOXPLORER_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    GERRITBOT_EXTRA_VARS="gerritbot_url: \"${SWIFT_CACHE}/gerritbot.git\", gerritbot_commit: \"${GERRITBOT_VERSION}\""
    ZUUL_EXTRA_VARS="zuul_url: \"${SWIFT_CACHE}/zuul.git\""
    ZUUL_EXTRA_VARS+=", zuul_commit: \"${ZUUL_VERSION}\""
    NODEPOOL_EXTRA_VARS="nodepool_url: \"${SWIFT_CACHE}/nodepool.git\""
    NODEPOOL_EXTRA_VARS+=", nodepool_commit: \"${NODEPOOL_VERSION}\""
fi

LECM_URL="https://github.com/Spredzy/lecm"
LECM_VER="0.0.6"

GIT_REPO_LIST="$GIT_REPO_LIST $LECM_URL"
LECM_EXTRA_VARS="lecm_commit: \"${LECM_VER}\""
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    LECM_EXTRA_VARS="${LECM_EXTRA_VARS}, lecm_url: \"${SWIFT_CACHE}/lecm.git\""
fi

# mirror2swift
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MIRROR2SWIFT_EXTRA_VARS="mirror2swift_url: \"${SWIFT_CACHE}/mirror2swift.git\""
fi

GRAFANA_URL="http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/rpms/grafana-2.5.0-1.x86_64.rpm"

URL_LIST="$URL_LIST $GRAFANA_URL"

#---- URL health check -------
function test_url {
  local e=0
  for url in $URL_LIST; do
    HTTP_CODE=$(curl -o /dev/null --silent --head --write-out '%{http_code}' "$url")

    if [ $HTTP_CODE -gt 399 ]
    then
      e=1
      echo "$url - Error $HTTP_CODE"
    else
      echo "$url - $HTTP_CODE"
    fi
  done;
  for repo in $GIT_REPO_LIST; do
    git ls-remote --exit-code $repo > /dev/null 2>&1
    if [ $? -gt 0 ]
    then
      echo "No matching refs for $repo"
      e=1
    else
      echo "$repo - 200"
    fi
  done;
  exit $e
}

[ -z "$DEBUG" ] || set -x
