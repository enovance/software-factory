# -*- shell-script -*-
# Note: Change to _VERSION likely needs to be reported to the mirror2swift configuration

set +x

USE_SWIFT_CACHE=${USE_SWIFT_CACHE:-yes}
SWIFT_CACHE="http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/repomirror"

# yum
RDO_REPO="https://repos.fedorapeople.org/repos/openstack/openstack-mitaka/rdo-release-mitaka-5.noarch.rpm"
URL_LIST="$URL_LIST $RDO_REPO"

RDO_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_rdo.txt)"

EPEL_REPO="epel-release"
EPEL_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_epel.txt)"

BUILD_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_build_requirements.txt)"
CENTOS_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_centos.txt)"

PASSENGER_REPO="https://oss-binaries.phusionpassenger.com/yum/definitions/el-passenger.repo"
PASSENGER_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_passenger.txt)"

RPM_PKGS="${PASSENGER_PKGS} ${EPEL_PKGS} ${RDO_PKGS} ${CENTOS_PKGS} ${BUILD_PKGS} jenkins grafana"
URL_LIST="$URL_LIST $PASSENGER_REPO $RDO_REPO"

SF_PKGS="$(grep '^[a-zA-Z]' ${ORIG}/packages/rpm_sf.txt)"

# pip
PIP_PKGS="$(grep '^[a-zA-Z\-]' ${ORIG}/packages/pip_pkgs.txt)"
export PIP_USE_MIRRORS=True


# Serverspec gem versions
SERVERSPEC_VERSION=2.25.0

GIT_VERSION=2.8.4

if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    BASE_EXTRA_VARS="git_url: \"${SWIFT_CACHE}/git/v${GIT_VERSION}.tar.gz\", git_version: \"${GIT_VERSION}\""
fi

# Storyboard
STORYBOARD_COMMIT="4926b471e2ccf0f4adb6e92e9f26769c942ae621"
STORYBOARD_CLIENT_COMMIT="cfdfaf866ca5da63ac734552772e1fe2f87c6543"
STORYBOARD_WEBCLIENT_COMMIT="d6ecab3"

if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MANAGESF_EXTRA_VARS="storyboardclient_url: \"${SWIFT_CACHE}/python-storyboardclient.git\""
    MANAGESF_EXTRA_VARS+=", storyboardclient_commit: \"${STORYBOARD_CLIENT_COMMIT}\""

    STORYBOARD_EXTRA_VARS+="storyboard_url: \"${SWIFT_CACHE}/storyboard.git\""
    STORYBOARD_EXTRA_VARS+=", storyboard_commit: \"${STORYBOARD_COMMIT}\""
    STORYBOARD_EXTRA_VARS+=", storyboardclient_url: \"${SWIFT_CACHE}/python-storyboardclient.git\""
    STORYBOARD_EXTRA_VARS+=", storyboardclient_commit: \"${STORYBOARD_CLIENT_COMMIT}\""

    STORYBOARD_WEBCLIENT_EXTRA_VARS="storyboard_webclient_url: \"${SWIFT_CACHE}/storyboard-webclient/storyboard-webclient-${STORYBOARD_WEBCLIENT_COMMIT}.tar.gz\""
    STORYBOARD_WEBCLIENT_EXTRA_VARS+=", storyboard_webclient_commit: \"${STORYBOARD_WEBCLIENT_COMMIT}\""
fi


# Job logs Gearman processors
LOG_GEARMAN_CLIENT_VERSION="d7d9d50ee2706608386c802246591a6c80a58a7f"
LOG_GEARMAN_CLIENT_URL="https://raw.githubusercontent.com/openstack-infra/puppet-log_processor/${LOG_GEARMAN_CLIENT_VERSION}/files/log-gearman-client.py"
LOG_GEARMAN_WORKER_VERSION="84c7e723128fab9da321ae1b0977e7d13923b36b"
LOG_GEARMAN_WORKER_URL="https://raw.githubusercontent.com/openstack-infra/puppet-log_processor/${LOG_GEARMAN_WORKER_VERSION}/files/log-gearman-worker.py"

URL_LIST="$URL_LIST $LOG_GEARMAN_CLIENT_URL $LOG_GEARMAN_WORKER_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    LOG_GEARMAN_CLIENT_URL="${SWIFT_CACHE}/log_gearman/log-gearman-client.py"
    LOG_GEARMAN_WORKER_URL="${SWIFT_CACHE}/log_gearman/log-gearman-worker.py"
fi


# mod_auth_pubtkt
MOD_AUTH_PUBTKT_VERSION=0.8
MOD_AUTH_PUBTKT_URL="https://neon1.net/mod_auth_pubtkt/mod_auth_pubtkt-${MOD_AUTH_PUBTKT_VERSION}.tar.gz"

URL_LIST="$URL_LIST $MOD_AUTH_PUBTKT_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MOD_AUTH_PUBTKT_URL="${SWIFT_CACHE}/apache_mod/mod_auth_pubtkt-${MOD_AUTH_PUBTKT_VERSION}.tar.gz"
fi


# redmine
REDMINE_VERSION=2.6.9
REDMINE_RHEL_URL="http://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"
REDMINE_BACKLOG_URL="https://github.com/backlogs/redmine_backlogs.git"
REDMINE_BACKLOG_VERSION="v1.0.6"
REDMINE_HTTP_PLUGIN_URL="https://github.com/kevinfoote/redmine_http_auth.git"
REDMINE_HTTP_PLUGIN_VERSION="259fb633ac27737d8b0f6a02230e7fa8f619b852"

URL_LIST="$URL_LIST $REDMINE_RHEL_URL"
GIT_REPO_LIST="$GIT_REPO_LIST $REDMINE_BACKLOG_URL $REDMINE_HTTP_PLUGIN_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    REDMINE_RHEL_URL="${SWIFT_CACHE}/redmine/redmine-${REDMINE_VERSION}.tar.gz"
    REDMINE_BACKLOG_URL="${SWIFT_CACHE}/redmine_backlogs.git"
    REDMINE_HTTP_PLUGIN_URL="${SWIFT_CACHE}/redmine_http_auth.git"
fi


# murmur
MURMUR_VERSION=1.2.13
MURMUR_URL="https://github.com/mumble-voip/mumble/releases/download/${MURMUR_VERSION}/murmur-static_x86-${MURMUR_VERSION}.tar.bz2"

URL_LIST="$URL_LIST $MURMUR_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MURMUR_URL="${SWIFT_CACHE}/murmur/murmur-static_x86-${MURMUR_VERSION}.tar.bz2"
fi


# bup
BUP_URL="https://github.com/bup/bup.git"
BUP_VERSION=0.26

GIT_REPO_LIST="$GIT_REPO_LIST $BUP_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    BUP_URL="${SWIFT_CACHE}/bup.git"
fi

# gerrit
GERRIT_VERSION=2.11.9
GERRIT_URL="https://gerrit-releases.storage.googleapis.com/gerrit-${GERRIT_VERSION}.war"
MYSQLJAVA_VERSION=5.1.21
MYSQLJAVA_URL="http://repo2.maven.org/maven2/mysql/mysql-connector-java/${MYSQLJAVA_VERSION}/mysql-connector-java-${MYSQLJAVA_VERSION}.jar"
BCPROV_VERSION="151"
BCPROVJDK_VERSION="jdk15on"
BCPROVJAVA_URL="http://downloads.bouncycastle.org/java/bcprov-${BCPROVJDK_VERSION}-${BCPROV_VERSION}.jar"
BCPKIX_VERSION=$BCPROV_VERSION
BCPKIXJDK_VERSION=$BCPROVJDK_VERSION
BCPKIXJAVA_URL="http://downloads.bouncycastle.org/java/bcpkix-${BCPKIXJDK_VERSION}-${BCPKIX_VERSION}.jar"

URL_LIST="$URL_LIST $GERRIT_URL $MYSQLJAVA_URL $BCPROVJAVA_URL $BCPKIXJAVA_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    GERRIT_URL="${SWIFT_CACHE}/gerrit/gerrit-${GERRIT_VERSION}.war"
    MYSQLJAVA_URL="${SWIFT_CACHE}/gerrit/mysql-connector-java-${MYSQLJAVA_VERSION}.jar"
    BCPROVJAVA_URL="${SWIFT_CACHE}/gerrit/bcprov-${BCPROVJDK_VERSION}-${BCPROV_VERSION}.jar"
    BCPKIXJAVA_URL="${SWIFT_CACHE}/gerrit/bcpkix-${BCPKIXJDK_VERSION}-${BCPKIX_VERSION}.jar"
fi


# bootstrap
BOOTSTRAP_VERSION=3.2.0
BOOTSTRAP_URL="https://github.com/twbs/bootstrap/releases/download/v${BOOTSTRAP_VERSION}/bootstrap-${BOOTSTRAP_VERSION}-dist.zip"

URL_LIST="$URL_LIST $BOOTSTRAP_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    BOOTSTRAP_URL="${SWIFT_CACHE}/javascripts/bootstrap-${BOOTSTRAP_VERSION}-dist.zip"
fi


# jenkins plugins
JENKINS_PLUGINS_URL="https://updates.jenkins-ci.org/download/plugins"
JENKINS_SWARM_VERSION=2.1
JENKINS_SWARM_CLIENT_URL="https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${JENKINS_SWARM_VERSION}/swarm-client-${JENKINS_SWARM_VERSION}-jar-with-dependencies.jar"
JENKINS_SWARM_URL="${JENKINS_PLUGINS_URL}/swarm/${JENKINS_SWARM_VERSION}/swarm.hpi"

JENKINS_TIMESTAMPER_VERSION=1.8.7
JENKINS_TIMESTAMPER_URL="${JENKINS_PLUGINS_URL}/timestamper/${JENKINS_TIMESTAMPER_VERSION}/timestamper.hpi"

JENKINS_CREDENTIALS_BINDING_VERSION=1.4
JENKINS_CREDENTIALS_BINDING_URL="${JENKINS_PLUGINS_URL}/credentials-binding/${JENKINS_CREDENTIALS_BINDING_VERSION}/credentials-binding.hpi"

JENKINS_WORKFLOW_STEP_API_VERSION=1.8
JENKINS_WORKFLOW_STEP_API_URL="${JENKINS_PLUGINS_URL}/workflow-step-api/${JENKINS_WORKFLOW_STEP_API_VERSION}/workflow-step-api.hpi"

JENKINS_PLAIN_CREDENTIALS_VERSION=1.0
JENKINS_PLAIN_CREDENTIALS_URL="${JENKINS_PLUGINS_URL}/plain-credentials/${JENKINS_PLAIN_CREDENTIALS_VERSION}/plain-credentials.hpi"

JENKINS_SSH_AGENT_VERSION=1.4.1
JENKINS_SSH_AGENT_URL="${JENKINS_PLUGINS_URL}/ssh-agent/${JENKINS_SSH_AGENT_VERSION}/ssh-agent.hpi"

JENKINS_GEARMAN_PLUGIN_VERSION=0.2.0
JENKINS_GEARMAN_PLUGIN_URL="${JENKINS_PLUGINS_URL}/gearman-plugin/${JENKINS_GEARMAN_PLUGIN_VERSION}/gearman-plugin.hpi"

JENKINS_REVERSE_PROXY_AUTH_PLUGIN_VERSION=1.4.0
JENKINS_REVERSE_PROXY_AUTH_PLUGIN_URL="${JENKINS_PLUGINS_URL}/reverse-proxy-auth-plugin/${JENKINS_REVERSE_PROXY_AUTH_PLUGIN_VERSION}/reverse-proxy-auth-plugin.hpi"

JENKINS_POSTBUILDSCRIPT_VERSION=0.17
JENKINS_POSTBUILDSCRIPT_URL="${JENKINS_PLUGINS_URL}/postbuildscript/${JENKINS_POSTBUILDSCRIPT_VERSION}/postbuildscript.hpi"

JENKINS_ANSICOLOR_VERSION=0.4.2
JENKINS_ANSICOLOR_URL="${JENKINS_PLUGINS_URL}/ansicolor/${JENKINS_ANSICOLOR_VERSION}/ansicolor.hpi"

JENKINS_SIMPLE_THEME_PLUGIN_VERSION=0.3
JENKINS_SIMPLE_THEME_PLUGIN_URL="${JENKINS_PLUGINS_URL}/simple-theme-plugin/${JENKINS_SIMPLE_THEME_PLUGIN_VERSION}/simple-theme-plugin.hpi"

JENKINS_ZMQ_EVENT_PUBLISHER_VERSION=0.0.5
JENKINS_ZMQ_EVENT_PUBLISHER_URL="${JENKINS_PLUGINS_URL}/zmq-event-publisher/${JENKINS_ZMQ_EVENT_PUBLISHER_VERSION}/zmq-event-publisher.hpi"

JENKINS_DASHBOARD_VIEW_VERSION=2.9.10
JENKINS_DASHBOARD_VIEW_URL="${JENKINS_PLUGINS_URL}/dashboard-view/${JENKINS_DASHBOARD_VIEW_VERSION}/dashboard-view.hpi"

JENKINS_COBERTURA_VERSION=1.9.8
JENKINS_COBERTURA_URL="${JENKINS_PLUGINS_URL}/cobertura/${JENKINS_COBERTURA_VERSION}/cobertura.hpi"

URL_LIST="$URL_LIST $JENKINS_PLUGINS_URL $JENKINS_TIMESTAMPER_URL $JENKINS_SWARM_CLIENT_URL $JENKINS_SWARM_URL $JENKINS_CREDENTIALS_BINDING_URL $JENKINS_WORKFLOW_STEP_API_URL"
URL_LIST="$URL_LIST $JENKINS_PLAIN_CREDENTIALS_URL $JENKINS_SSH_AGENT_URL $JENKINS_GEARMAN_PLUGIN_URL $JENKINS_REVERSE_PROXY_AUTH_PLUGIN_URL $JENKINS_POSTBUILDSCRIPT_URL"
URL_LIST="$URL_LIST $JENKINS_ANSICOLOR_URL $JENKINS_SIMPLE_THEME_PLUGIN_URL $JENKINS_ZMQ_EVENT_PUBLISHER_URL $JENKINS_DASHBOARD_VIEW_URL $JENKINS_COBERTURA_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    JENKINS_SWARM_CLIENT_URL="${SWIFT_CACHE}/jenkins_plugins/swarm-client-${JENKINS_SWARM_VERSION}-jar-with-dependencies.jar"
    JENKINS_SWARM_URL="${SWIFT_CACHE}/jenkins_plugins/swarm.hpi"
    JENKINS_TIMESTAMPER_URL="${SWIFT_CACHE}/jenkins_plugins/timestamper.hpi"
    JENKINS_CREDENTIALS_BINDING_URL="${SWIFT_CACHE}/jenkins_plugins/credentials-binding.hpi"
    JENKINS_WORKFLOW_STEP_API_URL="${SWIFT_CACHE}/jenkins_plugins/workflow-step-api.hpi"
    JENKINS_PLAIN_CREDENTIALS_URL="${SWIFT_CACHE}/jenkins_plugins/plain-credentials.hpi"
    JENKINS_SSH_AGENT_URL="${SWIFT_CACHE}/jenkins_plugins/ssh-agent.hpi"
    JENKINS_GEARMAN_PLUGIN_URL="${SWIFT_CACHE}/jenkins_plugins/gearman-plugin.hpi"
    JENKINS_REVERSE_PROXY_AUTH_PLUGIN_URL="${SWIFT_CACHE}/jenkins_plugins/reverse-proxy-auth-plugin.hpi"
    JENKINS_POSTBUILDSCRIPT_URL="${SWIFT_CACHE}/jenkins_plugins/postbuildscript.hpi"
    JENKINS_ANSICOLOR_URL="${SWIFT_CACHE}/jenkins_plugins/ansicolor.hpi"
    JENKINS_SIMPLE_THEME_PLUGIN_URL="${SWIFT_CACHE}/jenkins_plugins/simple-theme-plugin.hpi"
    JENKINS_ZMQ_EVENT_PUBLISHER_URL="${SWIFT_CACHE}/jenkins_plugins/zmq-event-publisher.hpi"
    JENKINS_DASHBOARD_VIEW_URL="${SWIFT_CACHE}/jenkins_plugins/dashboard-view.hpi"
    JENKINS_COBERTURA_URL="${SWIFT_CACHE}/jenkins_plugins/cobertura.hpi"
fi

# zuul_swift_upload
ZUUL_SWIFT_UPLOAD_URL="https://raw.githubusercontent.com/openstack-infra/project-config/master/jenkins/scripts/zuul_swift_upload.py"
URL_LIST="${URL_LIST} ${ZUUL_SWIFT_UPLOAD_URL}"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ZUUL_SWIFT_UPLOAD_URL="${SWIFT_CACHE}/zuul/zuul_swift_upload.py"
fi


# etherpad
ETHERPAD_LITE_VERSION=1.5.7
ETHERPAD_LITE_URL="https://codeload.github.com/ether/etherpad-lite/tar.gz/${ETHERPAD_LITE_VERSION}"

URL_LIST="$URL_LIST $ETHERPAD_LITE_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ETHERPAD_LITE_URL="${SWIFT_CACHE}/etherpad/${ETHERPAD_LITE_VERSION}"
fi


# font awesome
FONTAWESOME_VERSION=4.2.0
FONTAWESOME_URL="https://codeload.github.com/FortAwesome/Font-Awesome/zip/v${FONTAWESOME_VERSION}"

URL_LIST="$URL_LIST $FONTAWESOME_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    FONTAWESOME_URL="${SWIFT_CACHE}/fontawesome/v${FONTAWESOME_VERSION}"
fi


# JQuery
JQUERY_VERSION=2.1.1
JQUERY_URL="https://code.jquery.com/jquery-${JQUERY_VERSION}.min.js"

URL_LIST="$URL_LIST $JQUERY_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    JQUERY_URL="${SWIFT_CACHE}/javascripts/jquery-${JQUERY_VERSION}.min.js"
fi


# AngularJS
ANGULARJS_VERSION=1.2.27
ANGULARJS_URL="https://ajax.googleapis.com/ajax/libs/angularjs/${ANGULARJS_VERSION}/angular.min.js"

URL_LIST="$URL_LIST $ANGULARJS_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    ANGULARJS_URL="${SWIFT_CACHE}/javascripts/angular.min.js"
fi

# repoXplorer
REPOXPLORER_URL="https://softwarefactory-project.io/r/repoxplorer"
REPOXPLORER_VERSION=a63cfecf0049afb34c7ac90ee1bcb979aa01e4d5 # 2016-11-25

# Zuul / Nodepool
NODEPOOL_URL="https://github.com/openstack-infra/nodepool"
NODEPOOL_VERSION=1fd2a14ab79d256419083e2b2d9c463af36e039a # 2016-05-18
ZUUL_VERSION=a8b90b38094587bbd82ffa5e4028aef1dfd02987     # 2016-08-24

# gerritbot
GERRITBOT_URL="https://github.com/openstack-infra/gerritbot"
GERRITBOT_VERSION=d48b1bc41717291e43425ff437d6214b6934f60f

# paste (lodgeit)
PASTE_URL="https://git.openstack.org/openstack-infra/lodgeit"
PASTE_VERSION=beb3ff7e266 # latest commit as of 05 Jun 2015

GIT_REPO_LIST="$GIT_REPO_LIST $NODEPOOL_URL $GERRITBOT_URL $PASTE_URL $REPOXPLORER_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    GERRITBOT_EXTRA_VARS="gerritbot_url: \"${SWIFT_CACHE}/gerritbot.git\", gerritbot_commit: \"${GERRITBOT_VERSION}\""
    ZUUL_EXTRA_VARS="zuul_url: \"${SWIFT_CACHE}/zuul.git\""
    ZUUL_EXTRA_VARS+=", zuul_commit: \"${ZUUL_VERSION}\""
    ZUUL_EXTRA_VARS+=", jquery_visibility_url: \"${SWIFT_CACHE}/javascripts/jquery-visibility.min.js\""
    ZUUL_EXTRA_VARS+=", jquery_graphite_url: \"${SWIFT_CACHE}/javascripts/jquery-graphite.js\""
    NODEPOOL_EXTRA_VARS="nodepool_url: \"${SWIFT_CACHE}/nodepool.git\""
    NODEPOOL_EXTRA_VARS+=", nodepool_commit: \"${NODEPOOL_VERSION}\""
    PASTE_URL="${SWIFT_CACHE}/lodgeit.git"
    REPOXPLORER_EXTRA_VARS="repoxplorer_url: \"${REPOXPLORER_URL}\""
    REPOXPLORER_EXTRA_VARS+=", repoxplorer_commit: \"${REPOXPLORER_VERSION}\""
fi

LECM_URL="https://github.com/Spredzy/lecm"
LECM_VER="0.0.6"

GIT_REPO_LIST="$GIT_REPO_LIST $LECM_URL"
LECM_EXTRA_VARS="lecm_commit: \"${LECM_VER}\""
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    LECM_EXTRA_VARS="${LECM_EXTRA_VARS}, lecm_url: \"${SWIFT_CACHE}/lecm.git\""
fi

# mirror2swift
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    MIRROR2SWIFT_EXTRA_VARS="mirror2swift_url: \"${SWIFT_CACHE}/mirror2swift.git\""
fi

GRAFANA_URL="http://46.231.132.68:8080/v1/AUTH_b50e80d3969f441a8b7b1fe831003e0a/rpms/grafana-2.5.0-1.x86_64.rpm"

URL_LIST="$URL_LIST $GRAFANA_URL"


# gitweb kogakure theme
KOGAKURE_URL="https://github.com/kogakure/gitweb-theme.git"

GIT_REPO_LIST="$GIT_REPO_LIST $KOGAKURE_URL"
if [ "${USE_SWIFT_CACHE}" == "yes" ]; then
    KOGAKURE_URL="${SWIFT_CACHE}/gitweb-theme.git"
fi

#---- URL health check -------
function test_url {
  local e=0
  for url in $URL_LIST; do
    HTTP_CODE=$(curl -o /dev/null --silent --head --write-out '%{http_code}' "$url")

    if [ $HTTP_CODE -gt 399 ]
    then
      e=1
      echo "$url - Error $HTTP_CODE"
    else
      echo "$url - $HTTP_CODE"
    fi
  done;
  for repo in $GIT_REPO_LIST; do
    git ls-remote --exit-code $repo > /dev/null 2>&1
    if [ $? -gt 0 ]
    then
      echo "No matching refs for $repo"
      e=1
    else
      echo "$repo - 200"
    fi
  done;
  exit $e
}

[ -z "$DEBUG" ] || set -x
