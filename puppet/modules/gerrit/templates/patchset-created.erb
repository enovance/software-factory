#!/bin/sh
#
# Copyright (C) 2015 Red Hat <licensing@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# This hook will update a Redmine issue by:
# - changing its status to in-progess
# - add an issue note with the review URL

# https://gerrit-documentation.storage.googleapis.com/\
#        Documentation/2.8.1/config-hooks.html

# Gerrit will call the hook with the following options:
# patchset-created --change <change id>
#                  --is-draft <boolean>
#                  --change-url <change url>
#                  --project <project name>
#                  --branch <branch>
#                  --topic <topic>
#                  --uploader <uploader>
#                  --commit <sha1>
#                  --patchset <patchset id>
#                  --kind
#                  --change-owner
#                  --newrev

while [ $# -gt 1 ]
do
key="$1"

case $key in
    --change)
    CHANGE="$2"
    shift # past argument
    ;;
    --is-draft)
    ISDRAFT="$2"
    shift # past argument
    ;;
    --change-url)
    CHANGEURL="$2"
    shift # past argument
    ;;
    --project)
    PROJECT="$2"
    shift # past argument
    ;;
    --branch)
    BRANCH="$2"
    ;;
    --topic)
    TOPIC="$2"
    shift # past argument
    ;;
    --uploader)
    UPLOADER="$2"
    shift # past argument
    ;;
    --commit)
    COMMIT="$2"
    ;;
    --patchset)
    PATCHSET="$2"
    shift # past argument
    ;;
    --kind)
    KIND="$2"
    shift # past argument
    ;;
    --change-owner)
    CHANGEOWNER="$2"
    ;;
    --newrev)
    NEWREV="$2"
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

COMMIT_MESSAGE=`git cat-file -p $COMMIT`

MANAGESF_BASE_URL=http://managesf.<%= @fqdn %>
SF_SERVICE_PASSWORD=<%= @service_user_password %>

PAYLOAD=`mktemp -u`
COOKIE=`mktemp -u`
(
# get auth cookie
curl -X POST ${MANAGESF_BASE_URL}/auth/login/ \
     --data '{"back": "/", "method": "Password", "args": {"username": "_SF_SERVICE_USER_", "password": "'$SF_SERVICE_PASSWORD'"}}' \
     -c ${COOKIE} -H "Content-Type: application/json"

echo '{"change": "'$CHANGE'", "is_draft": "'$ISDRAFT'", "change_url": "'$CHANGEURL'", "project": "'$PROJECT'", "branch": "'$BRANCH'", "topic": "'$TOPIC'", "uploader": "'$UPLOADER'", "commit": "'$COMMIT'", "patchset": "'$PATCHSET'", "commit_message": "'$COMMIT_MESSAGE'", "kind": "'$KIND'", "change_owner": "'$CHANGEOWNER'", "newrev": "'$NEWREV'"}' > ${PAYLOAD}

# hook call
curl -X POST ${MANAGESF_BASE_URL}/manage/hooks/patchset_created/ \
     -H "Accept: application/json" -H "Content-Type: application/json" \
     -b ${COOKIE} --trace-ascii /dev/stdout \
     -d @${PAYLOAD}
) 2>&1 | tee -a /tmp/hook.log

rm ${PAYLOAD}
rm ${COOKIE}
