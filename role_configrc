#!/bin/sh
#
PREVIOUS_SF_REL=1.0.4
SF_REL=2.0.0
DVER=C7.0
DIST=centos

# Set this variable to 1 if we tag and set it back to 0 the commit after the tag
TAGGED_RELEASE=0
# Pinned versions of the subprojects to go with the current release
PYSFLIB_PINNED_VERSION=0.3.0
MANAGESF_PINNED_VERSION=0.6.0
CAUTH_PINNED_VERSION=0.5.0

export LC_ALL=C

# Version string
SF_VER=${DVER}-${SF_REL}
PREVIOUS_SF_VER=${DVER}-${PREVIOUS_SF_REL}

SWIFT_BASE_URL="http://os.enocloud.com:8080"
SWIFT_ACCOUNT="70aab03f69b549cead3cb5f463174a51"
# Base roles cloud and install-server
SWIFT_EDEPLOY_URL="${SWIFT_BASE_URL}/v1/AUTH_${SWIFT_ACCOUNT}/edeploy-base"
# Url where SF roles (software-factory and install-server-vm) are published
SWIFT_SF_URL="${SWIFT_BASE_URL}/v1/AUTH_${SWIFT_ACCOUNT}/edeploy-roles"
# Url where latest doc is stored
SWIFT_DOCS_URL="${SWIFT_BASE_URL}/v1/AUTH_${SWIFT_ACCOUNT}/sfdocs"

# Paths
WORKSPACE=/var/lib/sf
CLONES_DIR=$WORKSPACE/git
BUILD_DIR=$WORKSPACE/roles
EDEPLOY=$WORKSPACE/git/edeploy/

CREATE_IMG=$PWD/edeploy/create-image.sh
# Qcow2 params
IMG_CFG=$PWD/edeploy/params.virt

UPSTREAM=${BUILD_DIR}/upstream
INST=${BUILD_DIR}/install/${SF_VER}

PYSFLIB_CLONED_PATH="${PWD}/../deps/pysflib"
CAUTH_CLONED_PATH="${PWD}/../deps/cauth"
MANAGESF_CLONED_PATH="${PWD}/../deps/managesf"
SUBPROJECTS_DEPS="$PYSFLIB_CLONED_PATH $CAUTH_CLONED_PATH $MANAGESF_CLONED_PATH"

DOCDIR="${PWD}/docs"
GERRITHOOKS="${PWD}/gerrit-hooks"

BASE_DEPS="./edeploy/softwarefactory.install ./edeploy/third_party_tools"

function prepare_buildenv {
    if [ ! -d $WORKSPACE ]; then
        sudo mkdir -m 0770 $WORKSPACE
        sudo chown ${USER}:root $WORKSPACE
    fi

    [ ! -d "$BUILD_DIR" ] && sudo mkdir -p $BUILD_DIR
    [ ! -d "$UPSTREAM" ] && sudo mkdir -p $UPSTREAM
    [ ! -d "$CLONES_DIR" ] && sudo mkdir -p $CLONES_DIR
    sudo chown -R ${USER} ${CLONES_DIR}
}
