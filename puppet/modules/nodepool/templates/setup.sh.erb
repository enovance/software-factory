#!/bin/bash

# The jenkins user. Must be able to use sudo without password
sudo useradd -m jenkins
sudo gpasswd -a jenkins wheel
echo "jenkins ALL=(ALL) NOPASSWD:ALL" | sudo tee --append /etc/sudoers.d/90-cloud-init-users

# SSH key for the Jenkins user
sudo mkdir /home/jenkins/.ssh
sudo cp /opt/nodepool-scripts/authorized_keys /home/jenkins/.ssh/authorized_keys
sudo chown jenkins /home/jenkins/.ssh
sudo chown jenkins /home/jenkins/.ssh/authorized_keys
sudo chmod 700 /home/jenkins/.ssh
sudo chmod 600 /home/jenkins/.ssh/authorized_keys
sudo restorecon -R -v /home/jenkins/.ssh/authorized_keys

# Required by Jenkins
sudo yum install -y java

# zuul-cloner is needed as well
sudo yum install -y epel-release
sudo yum install -y python-pip git python-devel gcc
sudo pip install zuul gitdb

# For testing using the local Gerrit instance. Needs to be accessible from the
# slave nodes, thus a public IP is required
echo '<%= scope.function_hiera(["public_ip"]) %> <%= scope.function_hiera(["top_domain"]) %>' | sudo tee --append /etc/hosts

# Prepare slave for SF
sudo sed -i 's/^.*SELINUX=.*$/SELINUX=disabled/' /etc/selinux/config
git clone http://softwarefactory.enovance.com/r/sfstack
cd sfstack && sudo ./sfinstall.sh
sudo mkdir /srv/deps
sudo chown -R jenkins /srv/
cd /srv/software-factory && ./fetch_roles.sh bases
cd /srv/software-factory && ./fetch_roles.sh trees
sudo chmod 777 /var/lib/sf/
ssh-keygen -N "" -f /home/jenkins/.ssh/id_rsa
sudo chown -R jenkins /home/jenkins/.ssh

# sync FS, otherwise there are 0-byte sized files from the yum/pip installations
sudo sync

echo "setup.sh finished. Creating snapshot now, this will take a few minutes"
