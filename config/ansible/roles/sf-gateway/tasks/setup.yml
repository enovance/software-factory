---
- include_vars: /etc/puppet/hiera/sf/_arch.yaml
- include_vars: /etc/puppet/hiera/sf/sfcreds.yaml
- include_vars: /etc/puppet/hiera/sf/sf_version.yaml
- include_vars: /etc/ansible/vars/common.yml
- include_vars: /etc/ansible/roles/sf-gerrit/defaults/main.yml
- include_vars: /etc/ansible/roles/sf-zuul/defaults/main.yml
- include_vars: /etc/ansible/roles/sf-jenkins/defaults/main.yml
- include_vars: /etc/ansible/roles/sf-redmine/defaults/main.yml
- include_vars: /etc/ansible/roles/sf-grafana/defaults/main.yml

- name: Remove un-needed files
  file:
      path: "{{ item }}"
      state: absent
  with_items:
    - /etc/httpd/conf.d/autoindex.conf
    - /etc/httpd/conf.d/userdir.conf
    - /etc/httpd/conf.d/welcome.conf

- name: Create working directories
  file:
      path: "{{ item.name }}"
      state: directory
  with_items:
    - {name: /var/www/sf}
    - {name: /var/www/dashboard}

- name: Expose localCA.pem
  copy:
      content: "{{ localCA_pem }}"
      dest: /var/www/localCA.pem mode=0444

- name: Add embedded TLS certificate for apache
  when: not network['use_letsencrypt']
  notify: apache reload
  copy:
    content: "{{ item.content }}\n"
    dest: "/etc/pki/tls/{{ item.path }}"
    mode: "{{ item.mode|default(0444) }}"
    setype: "unconfined_u:object_r:cert_t:s0"
  with_items:
      - {content: "{{gateway_crt}}", path: "certs/{{ fqdn }}.crt"}
      - {content: "{{gateway_chain}}", path: "certs/{{ fqdn }}-chain.crt"}
      - {content: "{{gateway_key}}", path: "private/{{ fqdn }}.key", mode: '0400'}

- name: Install config files
  copy:
    src: "{{ item.name }}"
    dest: "{{ item.path }}/{{ item.name }}"
    mode: "{{ item.mode|default(0444) }}"
  with_items:
      #- {name: , path: , mode:}
      - {name: base64helper, path: /usr/local/sbin, mode: '0755'}
      - {name: dashboard.js, path: /var/www/dashboard}
      - {name: pages-404.html, path: /var/www/}
      - {name: ssl.conf, path: /etc/httpd/conf.d}
      - {name: user_settings.html, path: /var/www/sf}
      - {name: user_settings.js, path: /var/www/sf}

- name: Install index.html for zull
  copy:
    src: zuul.index.html
    dest: /var/www/zuul/index.html
    mode: 0444

- name: Ensure managesf_htpasswd is present
  file:
    path: /etc/httpd/managesf_htpasswd
    state: touch
    mode: 0640
    owner: apache

- name: Ensure pages.txt is present
  file:
    path: /etc/httpd/pages.txt
    state: touch
    mode: 0640
    owner: apache
    group: apache

- name: Install templates
  template:
      src: "{{ item.name }}.j2"
      dest: "{{item.dest }}/{{ item.name }}"
      owner: "{{ item.owner | default('root') }}"
      group: "{{ item.group | default('root') }}"
      mode: "{{ item.mode | default(0444) }}"
  with_items:
      - {name: dashboard.html, dest: /var/www/dashboard}
      - {name: gateway.common, dest: /etc/httpd/conf.d}
      - {name: gateway.conf, dest: /etc/httpd/conf.d}
      - {name: hideci.js, dest: /var/www/static/js}
      - {name: menu.js, dest: /var/www/static/js}
      - {name: topmenu.html, dest: /var/www}
      - {name: topmenu.js, dest: /var/www/static/js}
  notify: apache reload

- name: Install Kibana SF gateway rules
  template:
    src: templates/gateway-kibana.conf.j2
    dest: /etc/httpd/conf.d/gateway-kibana.conf
    mode: 0444
  with_items: "{{ inventory }}"
  when: '"kibana" in item["roles"]'
  notify: apache reload

- name: Load ssl module in apache configuration
  lineinfile:
    dest: /etc/httpd/conf.modules.d/00-ssl.conf
    line: "LoadModule ssl_module modules/mod_ssl.so"
    owner: apache
    group: apache
    mode: 0640

- name: Add x-x509-ca-cert mime types
  lineinfile:
      dest: /etc/mime.types
      line: "application/x-x509-ca-cert                      der pem crt"
  notify: apache reload

- name: Load cache module in apache configuration
  lineinfile:
    dest: /etc/httpd/conf.modules.d/00-cache.conf
    line: "LoadModule cache_module modules/mod_cache.so"
    create: True
    state: present
    owner: apache
    group: apache
    mode: 0640

- name: Install service file for socat_gerrit
  copy:
      src: socat_gerrit.service
      dest: /lib/systemd/system/socat_gerrit.service
      owner: root
      group: root
      mode: 0644
  register: install_service_file
  when: groups['gerrit'] != groups['gateway']

- name: Reload systemctl daemon
  shell: "systemctl daemon-reload"
  when:
      - install_service_file|changed
      - groups['gerrit'] != groups['gateway']

- name: Start service
  service:
      name: socat_gerrit
      enabled: yes
      state: started
  when: groups['gerrit'] != groups['gateway']

- name: Start apache service
  service:
    name: httpd
    enabled: yes
    state: started
