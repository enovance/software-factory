# -*- shell-script -*-

URL_LIST="$URL_LIST"
GIT_REPO_LIST="$GIT_REPO_LIST"

function latest_tag_or_master {
    pushd /tmp/ > /dev/null
    if [ -d testtag ]; then
        rm -rf testtag/.git
        rm -rf testtag
    fi
    git clone $1 testtag
    cd testtag
    git fetch --tags
    tagref=$(git rev-list --tags --max-count=1 2>/dev/null)
    latestTag=$(git describe --tags ${tagref})
    popd > /dev/null
    echo ${latestTag:-master}
}

# pysflib
PYSFLIB_REPO=${PYSFLIB_REPO:=https://github.com/enovance/pysflib.git}
PYSFLIB_LATEST_TAG=$(latest_tag_or_master $PYSFLIB_REPO)
# default deployment version is latest tag
PYSFLIB_VERSION=${PYSFLIB_VERSION:=$PYSFLIB_LATEST_TAG}

GIT_REPO_LIST="$GIT_REPO_LIST $PYSFLIB_REPO"

# cauth
CAUTH_REPO=${CAUTH_REPO:=https://github.com/enovance/cauth.git}
CAUTH_LATEST_TAG=$(latest_tag_or_master $CAUTH_REPO)
# default deployment version is latest tag
CAUTH_VERSION=${CAUTH_VERSION:=$CAUTH_LATEST_TAG}

GIT_REPO_LIST="$GIT_REPO_LIST $CAUTH_REPO"

# managesf
MANAGESF_REPO=${MANAGESF_REPO:=https://github.com/enovance/managesf.git}
MANAGESF_LATEST_TAG=$(latest_tag_or_master $MANAGESF_REPO)
# default deployment version is latest tag
MANAGESF_VERSION=${MANAGESF_VERSION:=$MANAGESF_LATEST_TAG}

GIT_REPO_LIST="$GIT_REPO_LIST $MANAGESF_REPO"


# fetch (again) the repos for md5 computation
pushd /tmp/ > /dev/null
if [ -d md5pysflib ]; then
    rm -rf md5pysflib/.git
    rm -rf md5pysflib
fi
git clone $PYSFLIB_REPO md5pysflib && cd md5pysflib && git checkout ${PYSFLIB_VERSION}
cd ..
if [ -d md5cauth ]; then
    rm -rf md5cauth/.git
    rm -rf md5cauth
fi
git clone $CAUTH_REPO md5cauth && cd md5cauth && git checkout ${CAUTH_VERSION}
cd ..
if [ -d md5managesf ]; then
    rm -rf md5managesf/.git
    rm -rf md5managesf
fi
git clone $MANAGESF_REPO md5managesf && cd md5managesf && git checkout ${MANAGESF_VERSION}
cd ..
popd > /dev/null
SUBPROJECTS_DEPS="/tmp/md5pysflib /tmp/md5cauth /tmp/md5managesf"
