# Default configurations
- defaults:
    name: global
    description: |
      <p>Job is managed by Jenkins Job Builder</a>.</p>

    project-type: freestyle
    wrappers:
      - ansicolor:
          colormap: gnome-terminal
    concurrent: true

- builder:
    name: prepare-workspace
    builders:
      - shell: |
          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}
          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None
          echo "Clean workspace"
          rm -Rf ./*
          echo "Clone $ZUUL_PROJECT"
          zuul-cloner http://{{ fqdn }}/r $ZUUL_PROJECT

- builder:
    name: zuul-swift-upload
    builders:
      - shell: |
          # Publish artifacts on a Swift server
          /usr/local/bin/zuul_swift_upload.py --name artifacts --delete-after 0 artifacts

- publisher:
    name: zuul-swift-upload
    publishers:
      - postbuildscript:
          builders:
            - zuul-swift-upload
          script-only-if-succeeded: False
          script-only-if-failed: False

## Useful job template
- job-template:
    name: '{name}-unit-tests'
    defaults: global
    builders:
      - prepare-workspace
      - shell: cd $ZUUL_PROJECT && ./run_tests.sh
    triggers:
      - zuul
    node: '{node}'

- job-template:
    name: '{name}-functional-tests'
    defaults: global
    builders:
      - prepare-workspace
      - shell: cd $ZUUL_PROJECT && ./run_functional-tests.sh
    triggers:
      - zuul
    node: '{node}'


- job-template:
    name: '{name}-publish-docs'
    defaults: global
    builders:
      - prepare-workspace
      - shell: cd $ZUUL_PROJECT && ./publish_docs.sh
    triggers:
      - zuul
    node: '{node}'

# Config repository associated jobs
- job:
    name: 'config-check'
    defaults: global
    builders:
      - shell: |
          set -e
          rm -Rf config build
          zuul-cloner http://{{ fqdn }}/r config
          # Prepare a default configuration for zuul and nodepool
          mkdir -p build/nodepool build/zuul
          (
            echo "[zuul]"
            echo
            echo "[connection gerrit]"
            echo "driver=gerrit"
            echo "server=localhost"
            echo "user=jenkins"
            echo ""
            echo "[connection smtp]"
            echo "driver=smtp"
            echo "server=localhost"
          ) > build/zuul/zuul.conf
          (
            echo "script-dir: /etc/nodepool/scripts"
            echo "images-dir: /opt/nodepool"
            echo "gearman-servers:"
            echo "  - host: 127.0.0.1"
            echo "targets:"
            echo "  - name: default"
            echo "providers:"
            echo "  - name: default"
            for provider in $(awk '/provider: / { print $NF }' config/nodepool/images.yaml); do
                echo "  - name: ${provider}"
            done
          ) > build/nodepool/nodepool.yaml
          cd config
          echo "[+] Checking jobs"
          # JJB needs access to jenkins to test (validate) jobs
          sudo jenkins-jobs test jobs/ -o ../build/
          echo "[+] Checking zuul"
          /usr/local/bin/yaml-merger.py zuul | tee ../build/zuul/layout.yaml
          cp zuul/*.py ../build/zuul/ || true
          zuul-server -c ../build/zuul/zuul.conf -l ../build/zuul/layout.yaml -t
          echo "[+] Checking nodepool"
          cp nodepool/*.yaml ../build/nodepool/
          WORKDIR=../build/nodepool/ /usr/local/bin/sf-nodepool-conf-merger.py merged.yaml
          nodepool -c ../build/nodepool/merged.yaml config-validate
          echo "[+] Checking gerrit replication"
          git config -f gerrit/replication.config -l > /dev/null
    triggers:
      - zuul
    node: master

- job:
    name: 'config-update'
    defaults: global
    builders:
      - shell: |
          echo "Updating configuration using $ZUUL_COMMIT"
          ssh root@managesf.{{ fqdn }} sf_configrepo_update
    publishers:
      - email:
          recipients: {{ network.admin_mail_forward }}
    triggers:
      - zuul
    node: master
