#!/bin/bash
#
# Copyright (C) 2014 eNovance SAS <licensing@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
set -x
set -e

gerrit_host=<%= scope.function_hiera(["gerrit_url"]) %>
gerrit_ssh_port=<%= @gerrit['gerrit_sshd_port'] %>
gateway="<%= scope.function_hiera(["http_gateway_host"]) %>"
gh="$gerrit_host:$gerrit_ssh_port"
jh="<%= scope.function_hiera(["jenkins_url"]) %>"
admin="<%= @gerrit['gerrit_admin_username'] %>"
admin_http_password="<%= @gerrit['gerrit_admin_password'] %>"
admin_email="<%= @gerrit['gerrit_admin_mail'] %>"
gerrit_ssh_key="/root/gerrit_admin_rsa"
jenkins_kick_script="/usr/local/jenkins/slave_scripts/kick.sh"
auth=$admin:$admin_http_password

# Create config project (managesf must be up)
if [ ! -f '/usr/share/config.init.done' ]; then
    sf-manage --host $gateway --auth-server $gateway --auth $auth create --name config --description "Config repository"
    sf-manage --host $gateway --auth-server $gateway --auth $auth replication_config add --section mysql_config projects config
    sf-manage --host $gateway --auth-server $gateway --auth $auth replication_config add --section mysql_config url gerrit@$gateway:/home/gerrit/site_path/git/\${name}.git
    sf-manage --host $gateway --auth-server $gateway --auth $auth replication_config add --section mysql_config push +refs/heads/*:refs/heads/*
    sf-manage --host $gateway --auth-server $gateway --auth $auth replication_config add --section mysql_config push +refs/tags/*:refs/tags/*
# wait for 10 seconds so that replication plugin reloading will be finished
    sleep 10
    sf-manage --host $gateway --auth-server $gateway --auth $auth trigger_replication --project config
    touch /usr/share/config.init.done
fi

# Clone the config project
echo "ssh -o StrictHostKeyChecking=no -i $gerrit_ssh_key \$@" > /root/ssh_wrapper.sh
chmod +x /root/ssh_wrapper.sh
export GIT_SSH="/root/ssh_wrapper.sh"
export GIT_COMMITTER_NAME=$admin
export GIT_COMMITTER_EMAIL=$admin_email
CONF_TMP=$(mktemp -d)
git clone ssh://$admin@$gh/config ${CONF_TMP}

if [ -d "${CONF_TMP}/jobs" ]; then
    echo "Config repository already initialised"
    rm -rf ${CONF_TMP}
    exit 0
fi

# Add JJB files to the config repo
mkdir ${CONF_TMP}/jobs
cp -Rv /usr/share/sf-jjb/* ${CONF_TMP}/jobs

# Add Zuul files to the config repo
mkdir ${CONF_TMP}/zuul
cp -Rv /usr/share/sf-zuul/* ${CONF_TMP}/zuul

# Commit the changes
cd ${CONF_TMP}
git add .
git commit -a --author "$admin <$admin_email>" -m "JJB/Zuul files"
git push origin master

rm -rf ${CONF_TMP}
