---
- include: /etc/ansible/tasks/create_user.yml user_name=jenkins ssh_key=jenkins_rsa

- name: Install backup procedure
  template: src="{{ item }}.sh.j2" dest="/root/{{ item }}_jenkins.sh" mode=0555
  with_items: ["backup", "restore"]

- name: "Create directory"
  file: path={{ item }} state=directory mode=0755 owner=jenkins
  with_items:
    - /var/lib/jenkins
    - /var/lib/jenkins/plugins
    - /var/cache/jenkins

- name: "Cleanup unused directory"
  file:
      path: /usr/local/jenkins
      state: absent

- name: "Setup configuration"
  template: src={{ item }}.j2 dest=/var/lib/jenkins/{{ item }} owner=jenkins group=jenkins mode=0644
  with_items:
    - jenkins.model.JenkinsLocationConfiguration.xml

- name: "Selinux: check port labelling"
  shell: "semanage port -l | grep -w 'http_port_t.*{{ item }}' > /dev/null"
  register: no_selinux_labelling
  changed_when: "no_selinux_labelling.rc != 0"
  ignore_errors: yes
  with_items: [8010, 8081]
  when: selinuxenabled

# Seport fail to relabel existing port, see https://github.com/ansible/ansible-modules-extras/issues/2009
# seport: ports={{ item }} proto=tcp setype=http_port_t state=present
#   -  with_items: [8081, 8010]
- name: "Selinux: port labelling"
  command: semanage port --modify -t http_port_t -p tcp 8081
  when:
      - selinuxenabled
      - no_selinux_labelling|failed

# special case for 8010 that is not already defined
- name: "Selinux: port labelling"
  shell: |
    semanage port --modify -t http_port_t -p tcp 8010 ||
    semanage port --add -t http_port_t -p tcp 8010
  when:
      - selinuxenabled
      - no_selinux_labelling|failed

- name: "Create /etc/jenkins_jobs directory"
  file: path=/etc/jenkins_jobs/ state=directory mode=0500 owner=jenkins

- name: "Setup jenkins_jobs.ini"
  template: src=jenkins_jobs.ini.j2 dest=/etc/jenkins_jobs/jenkins_jobs.ini mode=0400 owner=jenkins group=root

# Setup groovy script
- file: path=/usr/local/share/sf-jenkins-slave-tools/ state=directory mode=0755
- copy: src=remove-offline-node.groovy dest=/usr/local/share/sf-jenkins-slave-tools/remove-offline-node.groovy mode=0444
- include_vars: /etc/puppet/hiera/sf/sfcreds.yaml
- template: src=cron-jenkins-remove-offline-node.sh.j2 dest=/etc/cron.daily/jenkins-remove-offline-node.sh mode=0500
- template: src=resources.sh.j2 dest=/usr/local/bin/resources.sh mode=0755

# Setup default configuration for config-check
- name: "Create defconf directory"
  file:  path=/var/lib/jenkins/defconf state=directory mode=0500 owner=jenkins

- include_vars: /etc/puppet/hiera/sf/sfcreds.yaml

- name: "Setup test configuration for zuul and nodepool"
  template: src={{ item }}.j2 dest=/var/lib/jenkins/defconf/{{ item }}
  with_items:
    - zuul.conf
    - nodepool.yaml
