---
- name: set default policy dictionary
  set_fact:
    policy_dict: |
      '{ "admin_or_service": "rule:is_admin or rule:is_service",
         "admin_api": "rule:is_admin",

         "is_owner": "username:%(username)s",
         "owner_api": "rule:is_owner",
         "admin_or_owner": "rule:is_admin or rule:is_owner",

         "is_ptl": "group:%(project)s-ptl",
         "is_core": "group:%(project)s-core",
         "is_dev": "group:%(project)s-dev",
         "ptl_api": "rule:is_ptl",
         "core_api": "rule:is_core",
         "dev_api": "rule:is_dev",
         "contributor_api": "rule:ptl_api or rule:core_api or rule:dev_api",

         "authenticated_api": "is_authenticated:True",
         "any": "@",
         "none": "!",

         "managesf.project:get_one": "rule:any",
         "managesf.project:get_all": "rule:any",
         "managesf.project:create": "rule:admin_api",
         "managesf.project:delete": "rule:admin_api or rule:ptl_api" }'

- name: Check if policy config is already in config-repo
  stat: path=/root/config/policies
  register: configrepo_policies

- name: Include sfconfig.yaml to get fqdn
  include_vars: /etc/puppet/hiera/sf/sfconfig.yaml

- name: Init policy configuration
  when: configrepo_policies.stat.exists == false
  command: chdir=/root/config {{ item }}
  with_items:
    - git fetch --all
    - git reset --hard origin/master --
    - git clean -f -x -d
    - mkdir policies
    - echo "{{ policy_dict|to_json }}" > policies/policy.json
    - git add policies
    - git commit -m "Initialize policy configuration"
    - git push -f git+ssh://{{ fqdn }}/config
