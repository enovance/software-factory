#!/bin/sh
#

VER=2.0.4

# Version string
SF_PREVIOUS_VER=C7.0-2.0.3
SF_VER=${SF_VER:-C7.0-${VER}}

# Set this variable to 1 if we tag and set it back to 0 the commit after the tag
TAGGED_RELEASE=0
# Pinned versions of the subprojects to go with the current release
PYSFLIB_PINNED_VERSION=5b2443399d15e1dc3b5ac48d26f243caf8892dd0
MANAGESF_PINNED_VERSION=253efee73621a917f3fe2747eb6bc176bbbd8b9d
CAUTH_PINNED_VERSION=a48fe3aba138f98b13bd93f5324c6790947f22ba

RELEASE_GPG_FINGERPRINT=0xE46E04A2344803E5A808BDD7E8C203A71C3BAE4B

export LC_ALL=C

SWIFT_BASE_URL="http://46.231.133.241:8080"
SWIFT_ACCOUNT="sf"
SWIFT_IMAGE_CONTAINER="sf-images"
SWIFT_DOCS_CONTAINER="sf-docs"
# Url where SF roles (software-factory and install-server-vm) are published
SWIFT_SF_URL="${SWIFT_BASE_URL}/v1/AUTH_${SWIFT_ACCOUNT}/${SWIFT_IMAGE_CONTAINER}"
# Url where latest doc is stored
SWIFT_DOCS_URL="${SWIFT_BASE_URL}/v1/AUTH_${SWIFT_ACCOUNT}/${SWIFT_DOCS_CONTAINER}"

# Paths
SF_WORKSPACE="${SF_WORKSPACE:-/var/lib/sf}"
BUILD_DIR="${SF_WORKSPACE}/roles"

UPSTREAM="${BUILD_DIR}/upstream"
CACHE_PATH="${BUILD_DIR}/cache/sf-centos7"
IMAGE_PATH="${BUILD_DIR}/install/${SF_VER}/softwarefactory"

# If this script is run in CI job runner the
# ZUUL_PROJECT will be set
if [ -n "${ZUUL_PROJECT}" ]; then
    DEPS="${WORKSPACE}/deps"
    IN_ZUUL=1
else
    DEPS="${SF_WORKSPACE}/deps"
    IN_ZUUL=0
fi

PYSFLIB_CLONED_PATH="${PYSFLIB_CLONED_PATH:-${DEPS}/pysflib}"
CAUTH_CLONED_PATH="${CAUTH_CLONED_PATH:-${DEPS}/cauth}"
MANAGESF_CLONED_PATH="${MANAGESF_CLONED_PATH:-${DEPS}/managesf}"
SFMANAGER_CLONED_PATH="${SFMANAGER_CLONED_PATH:-${DEPS}/python-sfmanager}"

DOCDIR="${PWD}/docs"
GERRITHOOKS="${PWD}/gerrit-hooks"
HOT_TEMPLATES="${PWD}/deploy/heat"

# Rebuild cache if these files changed
CACHE_DEPS="./image/softwarefactory.install ./image/third_party_tools"

function prepare_buildenv {
    if [ ! -d "${SF_WORKSPACE}" ]; then
        sudo mkdir -m 0770 "${SF_WORKSPACE}"
        sudo chown ${USER}:root "${SF_WORKSPACE}"
    fi

    [ ! -d "$BUILD_DIR" ] && sudo mkdir -p $BUILD_DIR
    [ ! -d "$DEPS" ]      && sudo mkdir -p $DEPS && sudo chown ${USER}:root $DEPS
    [ ! -d "$UPSTREAM" ]  && sudo mkdir -p $UPSTREAM
    which wget &> /dev/null || sudo yum install -y wget
}
