#!/bin/bash

set -e

### This script is at the moment executed in the Jenkins master node.
### This is temporary and most of the code here will land in sfmanager.
### Futhermore as suggested in the review comment the futur sfmanager
### resources get/post/put will be called through the
### sf-config-update mechanism

FQDN={{ fqdn }}
SPASS={{ creds_sf_service_user_pwd }}
COOKIE_PATH=cookie
APPLIED_OUTPUT="applied-output"
VALIDATED_OUTPUT="validated-output"
ENDPOINT="http://$FQDN/manage/resources/"

trap "rm -f $COOKIE_PATH && rm -f $VALIDATED_OUTPUT && rm -f $APPLIED_OUTPUT" EXIT

[ -z "$1" ] && {
    echo "Valable arguments are validate, apply, get. Exit."
    exit 1
}

curl -s -X POST -c $COOKIE_PATH --data \
 '{"back": "/", "method": "Password", "args": {"username": "_SF_SERVICE_USER_", "password": "'$SPASS'"}}' \
 -H "Content-Type: application/json" http://$FQDN/auth/login/
[ ! -f $COOKIE_PATH ] && {
    echo "Unable to get a cookie ..."
    exit 1
}
case $1 in
    validate)
        [ -z "$ZUUL_URL" -o -z "$ZUUL_REF" ] && {
            echo "ZUUL_URL and ZUUL_REF need to set. Exit."
            exit 1
        }
        http_code=$(curl -s -w "%{http_code}" -b $COOKIE_PATH \
         -H "Content-Type: application/json" \
         -d '{"zuul_url": "'$ZUUL_URL'/config", "zuul_ref": "'$ZUUL_REF'"}' \
         -X POST $ENDPOINT -o $VALIDATED_OUTPUT)
        cat $VALIDATED_OUTPUT | python -m json.tool
        [ "$http_code" != "200" ] && {
            echo "Resource modifications validation failed (API return code: $http_code)."
            exit 1
        }
        exit 0
        ;;
    apply)
        http_code=$(curl -s -w "%{http_code}" -b $COOKIE_PATH \
         -X PUT $ENDPOINT -o $APPLIED_OUTPUT)
        cat $APPLIED_OUTPUT | python -m json.tool
        [ "$http_code" != "201" ] && {
            echo "Resource modifications apply failed (API return code: $http_code)."
            exit 1
        }
        exit 0
        ;;
    get)
        curl -s -b $COOKIE_PATH $ENDPOINT | python -m json.tool
        ;;
    *)
        echo "Action not supported."
        ;;
esac

