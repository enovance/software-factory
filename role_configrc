#!/bin/sh
#
## Versions stuff
# 0.9.2: roles are now published
# 0.9.3: roles upgrade tests
SF_REL=${SF_REL:-0.9.3}
case "${SF_DIST}" in
  "Debian")
    # Debian based
    DVER=D7
    DIST=wheezy
    ;;
  *)
    # Centos based
    DVER=C7.0
    DIST=centos
    ;;
esac

export LC_ALL=C

# Version string
SF_VER=${DVER}-${SF_REL}

# Base roles cloud and install-server
BASE_URL="http://os.enocloud.com:8080/v1/AUTH_70aab03f69b549cead3cb5f463174a51/edeploy-roles"

# Edeploy and Edeploy-roles project
EDEPLOY_PROJECT=https://github.com/enovance/edeploy.git
EDEPLOY_ROLES_PROJECT=https://github.com/enovance/edeploy-roles.git

# Edeploy source version
ED_TAG=master

# Qcow2 params
IMG_CFG=params.virt

# Paths
WORKSPACE=/var/lib/sf
CLONES_DIR=$WORKSPACE/git
BUILD_DIR=$WORKSPACE/roles
EDEPLOY=$WORKSPACE/git/edeploy-master/
EDEPLOY_ROLES=$WORKSPACE/git/edeploy-roles-master/
CREATE_IMG=${EDEPLOY}/build/create-image.sh

UPSTREAM=${BUILD_DIR}/upstream
INST=${BUILD_DIR}/install/${SF_VER}

SF_DEPS="./edeploy/functions ./edeploy/softwarefactory.install ./data/database.yml ./tools/pysflib/ ./tools/cauth/ ./tools/managesf/ ./docs/"
IS_DEPS="./edeploy/functions ./edeploy/install-server-vm.install ./tools/pysflib/ ./upgrade/ ./fetch_roles.sh ./role_configrc ./puppet/ ./tests/ ./serverspec/ ./tools/ ./bootstraps/*.sh ./bootstraps/sfcreds.yaml"

MAKE="make DVER=${DVER} DIST=${DIST} SF_REL=${SF_REL} EDEPLOY_PATH=${EDEPLOY} TOP=${BUILD_DIR}"

function prepare_buildenv {
    if [ ! -d $WORKSPACE ]; then
        sudo mkdir -m 0770 $WORKSPACE
        sudo chown ${USER}:root $WORKSPACE
    fi

    [ ! -d "$BUILD_DIR" ] && sudo mkdir -p $BUILD_DIR
    [ ! -d "$UPSTREAM" ] && sudo mkdir -p $UPSTREAM
    [ ! -d "$CLONES_DIR" ] && sudo mkdir -p $CLONES_DIR
    sudo chown -R ${USER} ${CLONES_DIR}
}

function fetch_edeploy {
    if [ ! -d "${EDEPLOY}" ]; then
        git clone $EDEPLOY_PROJECT ${EDEPLOY}
    fi
    if [ ! -d "${EDEPLOY_ROLES}" ]; then
        git clone $EDEPLOY_ROLES_PROJECT ${EDEPLOY_ROLES}
    fi
    (cd ${EDEPLOY}; git checkout $ED_TAG; git pull)
    (cd ${EDEPLOY_ROLES}; git checkout $ED_TAG; git pull)
    EDEPLOY_ROLES_REL=$(cd ${EDEPLOY_ROLES}; ${MAKE} version)
    echo
}
