#!/bin/sh
#

# Current development version of SF
VER=2.4.0

# Version string
PREVIOUS_VER=2.3.0

# A tagged release of SF is defined by the string "TaggedRelease" in the commit msg
REL_VER=$(git log --simplify-merges -n 1 | grep -i 'TaggedRelease:' | awk '{ print $2 }')
if [ ! -z "${REL_VER}" ]; then
    echo "This is release: ${REL_VER}."
    VER=${REL_VER}
    PREVIOUS_VER=2.3.0
    echo "Previous stable version is ${PREVIOUS_VER}"
    TAGGED_RELEASE=1
    # Pinned versions of the subprojects to go with the current release
    PYSFLIB_PINNED_VERSION=095a36a38c617538040e3abc5c46c92bd2b23da8
    MANAGESF_PINNED_VERSION=0f091acfdaaf8a7b2c5c2134553ff3155567a444
    CAUTH_PINNED_VERSION=7b2fb1b9c5bea13ca216d57f34a6ac0f6f59a637
    SFMANAGER_PINNED_VERSION=c5666ffe1151facd7973e09495d3d28e4c6e2d08
else
    TAGGED_RELEASE=0
fi

SF_VER=${SF_VER:-C7.0-${VER}}
SF_PREVIOUS_VER=C7.0-${PREVIOUS_VER}
RELEASE_GPG_FINGERPRINT=0xE46E04A2344803E5A808BDD7E8C203A71C3BAE4B

export LC_ALL=C

SWIFT_BASE_URL="http://46.231.132.68:8080"
SWIFT_ACCOUNT="b50e80d3969f441a8b7b1fe831003e0a"
SWIFT_IMAGE_CONTAINER="sf-images"
SWIFT_DOCS_CONTAINER="sf-docs"
# Url where SF roles (software-factory and install-server-vm) are published
SWIFT_SF_URL="${SWIFT_BASE_URL}/v1/AUTH_${SWIFT_ACCOUNT}/${SWIFT_IMAGE_CONTAINER}"
# Url where latest doc is stored
SWIFT_DOCS_URL="${SWIFT_BASE_URL}/v1/AUTH_${SWIFT_ACCOUNT}/${SWIFT_DOCS_CONTAINER}"

# Paths
SF_WORKSPACE="${SF_WORKSPACE:-/var/lib/sf}"
BUILD_DIR="${SF_WORKSPACE}/roles"

UPSTREAM="${BUILD_DIR}/upstream"
CACHE_PATH="${BUILD_DIR}/cache/sf-centos7"
IMAGE_PATH="${BUILD_DIR}/install/${SF_VER}/softwarefactory"

# If this script is run in CI job runner the
# ZUUL_PROJECT will be set
if [ -n "${ZUUL_PROJECT}" ]; then
    DEPS="${WORKSPACE}/deps"
    IN_ZUUL=1
else
    DEPS="${SF_WORKSPACE}/deps"
    IN_ZUUL=0
fi

PYSFLIB_CLONED_PATH="${PYSFLIB_CLONED_PATH:-${DEPS}/pysflib}"
CAUTH_CLONED_PATH="${CAUTH_CLONED_PATH:-${DEPS}/cauth}"
MANAGESF_CLONED_PATH="${MANAGESF_CLONED_PATH:-${DEPS}/managesf}"
SFMANAGER_CLONED_PATH="${SFMANAGER_CLONED_PATH:-${DEPS}/python-sfmanager}"

DOCDIR="${PWD}/docs"
HOT_TEMPLATES="${PWD}/deploy/heat"

# Rebuild cache if these files changed
CACHE_DEPS="./image/softwarefactory.install ./image/third_party_tools ./image/packages ./config/ansible/roles/*/tasks/install.yml"

function prepare_buildenv {
    if [ ! -d "${SF_WORKSPACE}" ]; then
        sudo mkdir -m 0770 "${SF_WORKSPACE}"
        sudo chown ${USER}:root "${SF_WORKSPACE}"
    fi
    bash ./rpm-requirements.sh

    [ ! -d "$BUILD_DIR" ] && sudo mkdir -p $BUILD_DIR
    [ ! -d "$DEPS" ]      && sudo mkdir -p $DEPS && sudo chown ${USER}:root $DEPS
    [ ! -d "$UPSTREAM" ]  && sudo mkdir -p $UPSTREAM
}
